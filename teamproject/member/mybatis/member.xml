<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
<!-- 리절트 맵 정의 -->	
	<resultMap id="memberResult" type="MemberVO">
		
		<result property="user_id" column="user_id" />
		<result property="user_pw" column="user_pw" />
		<result property="user_name" column="user_name" />
		
		<result property="user_phone" column="user_phone" />
		<result property="nickname" column="nickname" />
		<result property="user_email" column="user_email" />
		
		<result property="authority" column="authority" />
		<result property="user_date" column="user_date" />
		<result property="user_img" column="user_img" />
		
	</resultMap>	
	
	<!-- 로그인 -->
	<select id="login" resultType="memberVO"  parameterType="java.util.Map"  >
	    <![CDATA[
			select * from member 
			 where user_id=#{user_id}
			 and user_pw=#{user_pw}			
			 
		]]>
	</select>
	
	<!-- 회원가입 -->
  <insert id="insertNewMember"  parameterType="memberVO">
  <![CDATA[
    	insert into member(
				 		   user_id,
                           user_pw,
                           user_name,
                           user_phone,
                                     nickname,
                                     user_email,
                                     authority,
                                     user_date,
                                     user_img)
							 values(#{user_id},
									#{user_pw},
                                 	#{user_name},
                                   	#{user_phone},
                                   	#{nickname},
                                    #{user_email},
                                    #{authority},
                                    #{user_date},
                                    #{user_img})
                                  
                                      
   ]]>      
  </insert>
  
  <!-- 아이디 중복확인 -->
  <select id = "selectOverlappedID" parameterType="String" resultType="String">
  	<![CDATA[
  		select if(count(*)>0, 'true', 'false')
  		from member
  		where user_id = #{id}
  	]]>
  </select>
  
  <!-- 닉네임 중복확인 -->
    <select id = "selectOverlappedNickname" parameterType="String" resultType="String">
  	<![CDATA[
  		select if(count(*)>0, 'true', 'false')
  		from member
  		where nickname = #{nickname}
  	]]>
  </select>
  
  <!-- 이메일 중복확인 -->
    <select id = "selectOverlappedEmail" parameterType="String" resultType="String">
  	<![CDATA[
  		select if(count(*)>0, 'true', 'false')
  		from member
  		where user_email = #{user_email}
  	]]>
  </select>
  
  <!-- 아이디 찾기 -->
   <select id = "selectIdPhone" resultType="memberVO">
  	<![CDATA[
  		select user_id
  		from member
  		where user_name = #{user_name}
  		and user_phone = #{user_phone}
  	]]>
  </select>
  
  <select id = "selectIdEmail" resultType="memberVO">
  	<![CDATA[
  		select user_id
  		from member
  		where user_name = #{user_name}
  		and user_email = #{user_email}
  	]]>
  </select>

<!-- 비밀번호 찾기 -->
 <select id = "selectPwPhone" resultType="memberVO">
  	<![CDATA[
  		select user_id
  		from member
  		where user_id = #{user_id}
  		and user_phone = #{user_phone}
  	]]>
  </select>
  
   <select id = "selectPwEmail" resultType="memberVO">
  	<![CDATA[
  		select user_id
  		from member
  		where user_id = #{user_id}
  		and user_email = #{user_email}
  	]]>
  </select>
  
  <!-- 비밀번호 변경 -->
  <update id = "changePw">
  	<![CDATA[
  		update member
  		set user_pw = #{user_pw}
  		where user_id = #{user_id}
  	]]>
  </update>
  
  <!-- 회원 탈퇴 -->
  <delete id = "deleteId">
  	<![CDATA[
  		delete from member
  		where user_id = #{user_id}
  		and user_pw = #{user_pw}
  	]]>
  </delete>
  
  <!-- 회원정보 수정 비밀번호 체크 -->
  <select id = "memberedit_pw" resultType="memberVO">
  	<![CDATA[
  		select * from member
  		where user_id = #{user_id}
  		and user_pw = #{user_pw}
  	]]>
  </select>
  
  <!-- 회원정보 수정 -->
  <update id = "memberedit" parameterType="memberVO">
  	<![CDATA[
  		update member set
  		user_name = #{user_name},
  		nickname = #{nickname},
  		user_pw = #{user_pw},
  		user_email = #{user_email},
  		user_phone = #{user_phone}
  		where user_id = #{user_id}
  	]]>
  </update>

</mapper>